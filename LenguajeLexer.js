// Generated from Grammar.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,18,137,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,1,0,1,0,1,0,1,0,1,0,
1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,
1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,
11,1,12,1,12,1,13,1,13,5,13,101,8,13,10,13,12,13,104,9,13,1,13,1,13,1,14,
4,14,109,8,14,11,14,12,14,110,1,15,1,15,5,15,115,8,15,10,15,12,15,118,9,
15,1,16,4,16,121,8,16,11,16,12,16,122,1,16,1,16,1,17,1,17,1,17,1,17,5,17,
131,8,17,10,17,12,17,134,9,17,1,17,1,17,0,0,18,1,1,3,2,5,3,7,4,9,5,11,6,
13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,1,0,
6,3,0,10,10,13,13,34,34,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,
95,95,97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,141,0,1,1,0,0,0,0,3,1,
0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,1,37,1,
0,0,0,3,43,1,0,0,0,5,49,1,0,0,0,7,58,1,0,0,0,9,63,1,0,0,0,11,71,1,0,0,0,
13,80,1,0,0,0,15,86,1,0,0,0,17,88,1,0,0,0,19,90,1,0,0,0,21,92,1,0,0,0,23,
94,1,0,0,0,25,96,1,0,0,0,27,98,1,0,0,0,29,108,1,0,0,0,31,112,1,0,0,0,33,
120,1,0,0,0,35,126,1,0,0,0,37,38,5,115,0,0,38,39,5,101,0,0,39,40,5,103,0,
0,40,41,5,117,0,0,41,42,5,110,0,0,42,2,1,0,0,0,43,44,5,104,0,0,44,45,5,97,
0,0,45,46,5,99,0,0,46,47,5,101,0,0,47,48,5,114,0,0,48,4,1,0,0,0,49,50,5,
102,0,0,50,51,5,105,0,0,51,52,5,110,0,0,52,53,5,115,0,0,53,54,5,101,0,0,
54,55,5,103,0,0,55,56,5,117,0,0,56,57,5,110,0,0,57,6,1,0,0,0,58,59,5,99,
0,0,59,60,5,97,0,0,60,61,5,115,0,0,61,62,5,111,0,0,62,8,1,0,0,0,63,64,5,
100,0,0,64,65,5,101,0,0,65,66,5,102,0,0,66,67,5,101,0,0,67,68,5,99,0,0,68,
69,5,116,0,0,69,70,5,111,0,0,70,10,1,0,0,0,71,72,5,105,0,0,72,73,5,109,0,
0,73,74,5,112,0,0,74,75,5,114,0,0,75,76,5,105,0,0,76,77,5,109,0,0,77,78,
5,105,0,0,78,79,5,114,0,0,79,12,1,0,0,0,80,81,5,115,0,0,81,82,5,97,0,0,82,
83,5,108,0,0,83,84,5,105,0,0,84,85,5,114,0,0,85,14,1,0,0,0,86,87,5,123,0,
0,87,16,1,0,0,0,88,89,5,125,0,0,89,18,1,0,0,0,90,91,5,40,0,0,91,20,1,0,0,
0,92,93,5,41,0,0,93,22,1,0,0,0,94,95,5,58,0,0,95,24,1,0,0,0,96,97,5,59,0,
0,97,26,1,0,0,0,98,102,5,34,0,0,99,101,8,0,0,0,100,99,1,0,0,0,101,104,1,
0,0,0,102,100,1,0,0,0,102,103,1,0,0,0,103,105,1,0,0,0,104,102,1,0,0,0,105,
106,5,34,0,0,106,28,1,0,0,0,107,109,7,1,0,0,108,107,1,0,0,0,109,110,1,0,
0,0,110,108,1,0,0,0,110,111,1,0,0,0,111,30,1,0,0,0,112,116,7,2,0,0,113,115,
7,3,0,0,114,113,1,0,0,0,115,118,1,0,0,0,116,114,1,0,0,0,116,117,1,0,0,0,
117,32,1,0,0,0,118,116,1,0,0,0,119,121,7,4,0,0,120,119,1,0,0,0,121,122,1,
0,0,0,122,120,1,0,0,0,122,123,1,0,0,0,123,124,1,0,0,0,124,125,6,16,0,0,125,
34,1,0,0,0,126,127,5,47,0,0,127,128,5,47,0,0,128,132,1,0,0,0,129,131,8,5,
0,0,130,129,1,0,0,0,131,134,1,0,0,0,132,130,1,0,0,0,132,133,1,0,0,0,133,
135,1,0,0,0,134,132,1,0,0,0,135,136,6,17,0,0,136,36,1,0,0,0,6,0,102,110,
116,122,132,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class LenguajeLexer extends antlr4.Lexer {

    static grammarFileName = "Grammar.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'segun'", "'hacer'", "'finsegun'", "'caso'", 
                         "'defecto'", "'imprimir'", "'salir'", "'{'", "'}'", 
                         "'('", "')'", "':'", "';'" ];
	static symbolicNames = [ null, "SEGUN", "HACER", "FINSEGUN", "CASO", "DEFECTO", 
                          "IMPRIMIR", "SALIR", "LLAVE_A", "LLAVE_C", "PARENTESIS_A", 
                          "PARENTESIS_C", "DOS_PUNTOS", "PUNTO_COMA", "CADENA", 
                          "NUMERO", "ID", "WS", "COMENTARIO" ];
	static ruleNames = [ "SEGUN", "HACER", "FINSEGUN", "CASO", "DEFECTO", "IMPRIMIR", 
                      "SALIR", "LLAVE_A", "LLAVE_C", "PARENTESIS_A", "PARENTESIS_C", 
                      "DOS_PUNTOS", "PUNTO_COMA", "CADENA", "NUMERO", "ID", 
                      "WS", "COMENTARIO" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

LenguajeLexer.EOF = antlr4.Token.EOF;
LenguajeLexer.SEGUN = 1;
LenguajeLexer.HACER = 2;
LenguajeLexer.FINSEGUN = 3;
LenguajeLexer.CASO = 4;
LenguajeLexer.DEFECTO = 5;
LenguajeLexer.IMPRIMIR = 6;
LenguajeLexer.SALIR = 7;
LenguajeLexer.LLAVE_A = 8;
LenguajeLexer.LLAVE_C = 9;
LenguajeLexer.PARENTESIS_A = 10;
LenguajeLexer.PARENTESIS_C = 11;
LenguajeLexer.DOS_PUNTOS = 12;
LenguajeLexer.PUNTO_COMA = 13;
LenguajeLexer.CADENA = 14;
LenguajeLexer.NUMERO = 15;
LenguajeLexer.ID = 16;
LenguajeLexer.WS = 17;
LenguajeLexer.COMENTARIO = 18;



